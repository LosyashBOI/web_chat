{"mappings":"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","sources":["storage.js","node_modules/js-cookie/dist/js.cookie.js","socket.js","view-chatik.js","main-chatik.js","node_modules/date-fns/esm/format/index.js","node_modules/date-fns/esm/_lib/requiredArgs/index.js","node_modules/date-fns/esm/isDate/index.js","node_modules/date-fns/esm/toDate/index.js","node_modules/date-fns/esm/isValid/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","node_modules/date-fns/esm/locale/en-US/index.js","node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","node_modules/date-fns/esm/_lib/toInteger/index.js","node_modules/date-fns/esm/addMilliseconds/index.js","node_modules/date-fns/esm/subMilliseconds/index.js","node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","node_modules/date-fns/esm/_lib/format/formatters/index.js","node_modules/date-fns/esm/_lib/getUTCWeek/index.js","node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","node_modules/date-fns/esm/_lib/format/longFormatters/index.js","node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","node_modules/date-fns/esm/_lib/protectedTokens/index.js"],"sourcesContent":["import Cookies from 'js-cookie';\n\nexport const token = Cookies.get('token');\nexport const currentUser = Cookies.get('currentUser');","/*! js-cookie v3.0.1 | MIT */\n;\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, (function () {\n    var current = global.Cookies;\n    var exports = global.Cookies = factory();\n    exports.noConflict = function () { global.Cookies = current; return exports; };\n  }()));\n}(this, (function () { 'use strict';\n\n  /* eslint-disable no-var */\n  function assign (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        target[key] = source[key];\n      }\n    }\n    return target\n  }\n  /* eslint-enable no-var */\n\n  /* eslint-disable no-var */\n  var defaultConverter = {\n    read: function (value) {\n      if (value[0] === '\"') {\n        value = value.slice(1, -1);\n      }\n      return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n    },\n    write: function (value) {\n      return encodeURIComponent(value).replace(\n        /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n        decodeURIComponent\n      )\n    }\n  };\n  /* eslint-enable no-var */\n\n  /* eslint-disable no-var */\n\n  function init (converter, defaultAttributes) {\n    function set (key, value, attributes) {\n      if (typeof document === 'undefined') {\n        return\n      }\n\n      attributes = assign({}, defaultAttributes, attributes);\n\n      if (typeof attributes.expires === 'number') {\n        attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n      }\n      if (attributes.expires) {\n        attributes.expires = attributes.expires.toUTCString();\n      }\n\n      key = encodeURIComponent(key)\n        .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n        .replace(/[()]/g, escape);\n\n      var stringifiedAttributes = '';\n      for (var attributeName in attributes) {\n        if (!attributes[attributeName]) {\n          continue\n        }\n\n        stringifiedAttributes += '; ' + attributeName;\n\n        if (attributes[attributeName] === true) {\n          continue\n        }\n\n        // Considers RFC 6265 section 5.2:\n        // ...\n        // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n        //     character:\n        // Consume the characters of the unparsed-attributes up to,\n        // not including, the first %x3B (\";\") character.\n        // ...\n        stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n      }\n\n      return (document.cookie =\n        key + '=' + converter.write(value, key) + stringifiedAttributes)\n    }\n\n    function get (key) {\n      if (typeof document === 'undefined' || (arguments.length && !key)) {\n        return\n      }\n\n      // To prevent the for loop in the first place assign an empty array\n      // in case there are no cookies at all.\n      var cookies = document.cookie ? document.cookie.split('; ') : [];\n      var jar = {};\n      for (var i = 0; i < cookies.length; i++) {\n        var parts = cookies[i].split('=');\n        var value = parts.slice(1).join('=');\n\n        try {\n          var foundKey = decodeURIComponent(parts[0]);\n          jar[foundKey] = converter.read(value, foundKey);\n\n          if (key === foundKey) {\n            break\n          }\n        } catch (e) {}\n      }\n\n      return key ? jar[key] : jar\n    }\n\n    return Object.create(\n      {\n        set: set,\n        get: get,\n        remove: function (key, attributes) {\n          set(\n            key,\n            '',\n            assign({}, attributes, {\n              expires: -1\n            })\n          );\n        },\n        withAttributes: function (attributes) {\n          return init(this.converter, assign({}, this.attributes, attributes))\n        },\n        withConverter: function (converter) {\n          return init(assign({}, this.converter, converter), this.attributes)\n        }\n      },\n      {\n        attributes: { value: Object.freeze(defaultAttributes) },\n        converter: { value: Object.freeze(converter) }\n      }\n    )\n  }\n\n  var api = init(defaultConverter, { path: '/' });\n  /* eslint-enable no-var */\n\n  return api;\n\n})));\n","import {token} from \"./storage.js\";\n\nexport const socket = new WebSocket(`wss://mighty-cove-31255.herokuapp.com/websockets?${token}`);\n\nexport function sendMessageToServer(textInput) {\n    console.log(socket.readyState);\n    socket.send(JSON.stringify({\n        text: textInput,\n    }));\n}","import {getMessageHistory, getTime} from './main-chatik.js';\nimport {sendMessageToServer} from \"./socket.js\";\n\nexport const UI_ELEMENTS = {\n    MODAL: document.querySelector('.modal'),\n    SETTINGS_WINDOW: document.querySelector('.modal__element_settings'),\n    SETTINGS_BUTTON: document.querySelector('.btn_settings'),\n    AUTHORIZATION_WINDOW: document.querySelector('.modal__element_authorization'),\n    CONFIRMATION_WINDOW: document.querySelector('.modal__element_confirmation'),\n    LOG_OUT_BUTTON: document.querySelector('.btn_log-out'),\n    CLOSE_WINDOW: document.querySelectorAll('.btn_close-modal'),\n    CHAT_OUTPUT: document.querySelector('.chat__output'),\n    CHAT_INPUT: document.querySelector('.input_message'),\n    CHAT_SCROLL: document.querySelector('.chat__middle'),\n    CHAT_SUBMIT: document.querySelector('.btn_message-submit'),\n    AUTHORIZATION_INPUT: document.querySelector('.input_authorization'),\n    AUTHORIZATION_SUBMIT: document.querySelector('.btn_authorization-submit'),\n    CONFIRMATION_INPUT: document.querySelector('.input_confirmation'),\n    CONFIRMATION_SUBMIT: document.querySelector('.btn_confirmation-submit'),\n    TEMPLATE_MESSAGE: document.querySelector('.template-message'),\n    USERNAME_INPUT: document.querySelector('.input_settings'),\n    USERNAME_SUBMIT: document.querySelector('.btn_settings-submit'),\n    MESSAGE_AUTHOR: document.querySelector('.message__author'),\n}\n\nlet isLoading = false;\n\nexport function openSettings() {\n    UI_ELEMENTS.MODAL.style.display = 'block';\n    UI_ELEMENTS.SETTINGS_WINDOW.style.display = 'block';\n}\n\nexport function logOut() {\n    UI_ELEMENTS.MODAL.style.display = 'block';\n    UI_ELEMENTS.AUTHORIZATION_WINDOW.style.display = 'block';\n}\n\nexport function openConfirmation() {\n    UI_ELEMENTS.AUTHORIZATION_WINDOW.style.display = 'none';\n    UI_ELEMENTS.CONFIRMATION_WINDOW.style.display = 'block';\n}\n\nexport function closeWindow(event) {\n    const modalWindow = event.currentTarget.parentElement.parentElement;\n\n    UI_ELEMENTS.MODAL.style.display = 'none';\n    modalWindow.style.display = 'none';\n}\n\nexport function createMessage(username, time, from, text) {\n    const message = document.createElement('div');\n\n    const type = (from === 'me') ? 'sent' : 'delivered'\n    message.className = `message message_${from} message_${type}`;\n    message.append(UI_ELEMENTS.TEMPLATE_MESSAGE.content.cloneNode(true));\n    message.firstElementChild.textContent = username + ': ' + text;\n    message.lastElementChild.textContent = getTime(time);\n\n    return message;\n}\n\nexport function sendMessage() {\n    if (UI_ELEMENTS.CHAT_INPUT.value) {\n        try {\n            sendMessageToServer(UI_ELEMENTS.CHAT_INPUT.value)\n        } catch (e) {\n            alert(e);\n        }\n        // createMessage(currentUser, Date.now(), 'me', UI_ELEMENTS.CHAT_INPUT.value);\n\n        UI_ELEMENTS.CHAT_INPUT.value = '';\n    }\n}\n\nexport async function showMessageHistory(visibleMessages, older = false) {\n    const messageHistory = await getMessageHistory();\n    const amountOfMessages = messageHistory.messages.length - (visibleMessages - 20);\n\n    for (let i = amountOfMessages - 20; i < amountOfMessages; i++) {\n        const messageData = {\n            username: messageHistory.messages[i].user.name,\n            time: messageHistory.messages[i].createdAt,\n            text: messageHistory.messages[i].text\n        }\n\n        const message  = createMessage(messageData.username, messageData.time, 'companion', messageData.text);\n\n        older ? UI_ELEMENTS.CHAT_OUTPUT.prepend(message) : UI_ELEMENTS.CHAT_OUTPUT.append(message);\n\n        // console.log(messageHistory.messages[i]);\n    }\n    // UI_ELEMENTS.CHAT_SCROLL.scrollTop = UI_ELEMENTS.CHAT_SCROLL.scrollHeight;\n}\n\n\n","import {\n    closeWindow,\n    openConfirmation,\n    logOut,\n    openSettings,\n    sendMessage,\n    UI_ELEMENTS,\n    showMessageHistory, createMessage,\n} from \"./view-chatik.js\";\nimport {currentUser, token} from \"./storage.js\";\nimport Cookies from \"js-cookie\";\nimport {socket} from \"./socket\";\nimport {format} from \"date-fns\";\n\nasync function sendEmail() {\n    const url = 'https://mighty-cove-31255.herokuapp.com/api/user';\n    const emailAddress = {\n        email: UI_ELEMENTS.AUTHORIZATION_INPUT.value\n    }\n\n    try {\n        const response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(emailAddress)\n        });\n\n        if (!response.ok) {\n            throw new Error('Invalid email');\n        } else {\n            openConfirmation();\n        }\n    } catch (e) {\n        alert(e);\n    }\n    // console.log(response);\n}\n\nfunction getCode() {\n    const code = UI_ELEMENTS.CONFIRMATION_INPUT.value;\n    try {\n        if (!!code) {\n            Cookies.set('token', code);\n\n            UI_ELEMENTS.CONFIRMATION_INPUT.value = '';\n            UI_ELEMENTS.MODAL.style.display = 'none';\n            UI_ELEMENTS.CONFIRMATION_WINDOW.style.display = 'none';\n\n            return code;\n        } else {\n            throw new Error('Введите код');\n        }\n    } catch (e) {\n        alert(e);\n    }\n}\n\nasync function changeUsername() {\n    const url = 'https://mighty-cove-31255.herokuapp.com/api/user';\n    const newName = {\n        name: UI_ELEMENTS.USERNAME_INPUT.value\n    };\n\n    try {\n        await fetch(url, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                Authorization: `Bearer ${Cookies.get('token')}`\n            },\n            body: JSON.stringify(newName),\n\n        });\n    } catch (e) {\n        alert(e);\n    }\n}\n\nasync function getNewUsername() {\n    const url = 'https://mighty-cove-31255.herokuapp.com/api/user/me';\n\n    try {\n        const response = await fetch(url, {\n            headers: {\n                Authorization: `Bearer ${Cookies.get('token')}`\n            }\n        });\n        const json = await response.json();\n\n        // console.log(json);\n        if (response.ok) {\n            Cookies.set('currentUser', json.name);\n            console.log(currentUser);\n\n        }\n    } catch (e) {\n        alert(e)\n    }\n}\nexport async function getMessageHistory() {\n    const url = 'https://mighty-cove-31255.herokuapp.com/api/messages';\n    const response = await fetch(url, {\n        headers: {\n            Authorization: `Bearer ${Cookies.get('token')}`\n        }\n    });\n\n    const messages = await response.json();\n\n    return messages;\n}\n\nexport function getTime(time) {\n    return format(new Date(time), 'HH:mm')\n}\n\nfunction getOlderMessages() {\n    const scroll = UI_ELEMENTS.CHAT_OUTPUT;\n    let count = 20;\n\n    if (scroll.scrollTop < 100) {\n        count *= 2;\n        showMessageHistory(count, true);\n    }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    showMessageHistory(20, true);\n});\nUI_ELEMENTS.SETTINGS_BUTTON.addEventListener('click', openSettings);\nUI_ELEMENTS.LOG_OUT_BUTTON.addEventListener('click', logOut);\nUI_ELEMENTS.CHAT_SUBMIT.addEventListener('click', sendMessage);\nUI_ELEMENTS.AUTHORIZATION_SUBMIT.addEventListener('click', sendEmail);\nUI_ELEMENTS.CONFIRMATION_SUBMIT.addEventListener('click', getCode);\nUI_ELEMENTS.USERNAME_SUBMIT.addEventListener('click', changeUsername);\nUI_ELEMENTS.USERNAME_SUBMIT.addEventListener('click', getNewUsername);\nUI_ELEMENTS.CHAT_SCROLL.addEventListener('scroll', getOlderMessages);\n// UI_ELEMENTS.CHAT_SCROLL.addEventListener('scroll', () => {\n//     console.log(UI_ELEMENTS.CHAT_SCROLL.scrollTop);\n// });\nsocket.onmessage = function(event) {\n    const messageData = JSON.parse(event.data);\n\n    const message = createMessage(messageData.user.name, messageData.createdAt, 'companion', messageData.text);\n    UI_ELEMENTS.CHAT_OUTPUT.append(message);\n    // console.log(message);\n}\n\nfor (let btn of UI_ELEMENTS.CLOSE_WINDOW) {\n    btn.addEventListener('click', closeWindow);\n}","import isValid from \"../isValid/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\n\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\n\nvar formatDistance = function (token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n};\n\nexport default formatDistance;","export default function buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // TODO: Remove String()\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\n\nvar formatRelative = function (token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\n\nexport default formatRelative;","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n}; // Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\n\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nvar ordinalNumber = function (dirtyNumber, _options) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n};\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nimport lightFormatters from \"../lightFormatters/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/) || [];\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}"],"names":["$eaf3c7fa323d1109$export$9e1725a4cfeada27","$parcel$interopDefault","$666bc8f27f76152a$exports","assign","target","i","arguments","length","source","key","init","converter1","defaultAttributes","set","value","attributes","document","expires","Date","now","toUTCString","encodeURIComponent","replace","decodeURIComponent","escape","stringifiedAttributes","attributeName","split","cookie","write","get","cookies","jar","parts","slice","join","foundKey","read","e","Object","create","remove","withAttributes","this","converter","withConverter","freeze","path","factory","$eaf3c7fa323d1109$export$5671b2216dc5440f","$af074995e11df2f5$export$4f55ed1789bc2dcb","WebSocket","$537e5d8f5a7600aa$export$6b8c0dabfa626b4f","MODAL","querySelector","SETTINGS_WINDOW","SETTINGS_BUTTON","AUTHORIZATION_WINDOW","CONFIRMATION_WINDOW","LOG_OUT_BUTTON","CLOSE_WINDOW","querySelectorAll","CHAT_OUTPUT","CHAT_INPUT","CHAT_SCROLL","CHAT_SUBMIT","AUTHORIZATION_INPUT","AUTHORIZATION_SUBMIT","CONFIRMATION_INPUT","CONFIRMATION_SUBMIT","TEMPLATE_MESSAGE","USERNAME_INPUT","USERNAME_SUBMIT","MESSAGE_AUTHOR","$537e5d8f5a7600aa$export$76d80e17ab66a7c","event","modalWindow","currentTarget","parentElement","style","display","$537e5d8f5a7600aa$export$62651879628e0c4c","username","time","from","text","message","createElement","type","className","append","content","cloneNode","firstElementChild","textContent","lastElementChild","dirtyDate","dirtyFormatStr","dirtyOptions","$377d1ce359384586$export$2e2bcd8739ae039","formatStr","String","options","locale","$0ca880ce53ce49f9$export$2e2bcd8739ae039","localeFirstWeekContainsDate","firstWeekContainsDate","defaultFirstWeekContainsDate","$a874c42e2166676d$export$2e2bcd8739ae039","RangeError","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","localize","formatLong","originalDate","$bce2d00733a79246$export$2e2bcd8739ae039","$93a8d45f3f5c7cb9$export$2e2bcd8739ae039","timezoneOffset","$6eb366e006a8b659$export$2e2bcd8739ae039","utcDate","$6673cc5b62dfa592$export$2e2bcd8739ae039","formatterOptions","_originalDate","match","$4e349bc0dbb08c36$var$longFormattingTokensRegExp","map","substring","firstCharacter","longFormatter","$4f085685fa15e740$export$2e2bcd8739ae039","$4e349bc0dbb08c36$var$formattingTokensRegExp","$4e349bc0dbb08c36$var$cleanEscapedString","formatter","$d91e238bf521c720$export$2e2bcd8739ae039","useAdditionalWeekYearTokens","$a5375092e28b891e$export$c6b49d6dceb604a1","$a5375092e28b891e$export$8073c1ae88f0e727","useAdditionalDayOfYearTokens","$a5375092e28b891e$export$c6cc36aa33304772","$4e349bc0dbb08c36$var$unescapedLatinCharacterRegExp","$4e349bc0dbb08c36$export$2e2bcd8739ae039","$569c5a2134802fe0$export$1428f42a7de81803","async","$537e5d8f5a7600aa$export$5b4d1c4f6731d446","visibleMessages","older","messageHistory","url","response","fetch","headers","Authorization","json","$569c5a2134802fe0$export$24d2e7dc410ce2e5","amountOfMessages","messages","messageData","user","name","createdAt","prepend","required","args","TypeError","$6fd1c9a3eeaafbe4$export$2e2bcd8739ae039","prototype","toString","call","argument","argStr","getTime","console","warn","Error","stack","NaN","date","isNaN","Number","$1c4e78b8ee7f66d8$var$formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","$1c4e78b8ee7f66d8$export$2e2bcd8739ae039","token","count","result","tokenValue","addSuffix","comparison","$05b7040d79e43f9d$export$2e2bcd8739ae039","undefined","width","defaultWidth","format","formats","$b99de2b03d4f39be$var$formatLong","full","long","medium","short","dateTime","$117705cf2af2348d$var$formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","$eda89c8f88184c82$export$2e2bcd8739ae039","dirtyIndex","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","$c309fdccb9ef673a$export$2e2bcd8739ae039","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","matchedString","parsePatterns","defaultParseWidth","Array","isArray","$c309fdccb9ef673a$var$findIndex","pattern","test","$c309fdccb9ef673a$var$findKey","valueCallback","rest","object","predicate","hasOwnProperty","array","code","formatDistance","formatRelative","_date","_baseDate","_options","ordinalNumber","dirtyNumber","number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","index","Math","ceil","floor","$5fd7da45fede2458$export$2e2bcd8739ae039","dirtyAmount","timestamp","amount","$8b6bcc549b1c1b29$export$2e2bcd8739ae039","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","$56d5b29bd1df6af4$export$2e2bcd8739ae039","year","getUTCFullYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","$4e98b4d5a2488885$export$2e2bcd8739ae039","fourthOfJanuary","$0dfbcd4e04a34858$export$2e2bcd8739ae039","$efe8c2ce4ac4bd36$export$2e2bcd8739ae039","firstWeekOfNextYear","firstWeekOfThisYear","$5b38b39a484f4993$export$2e2bcd8739ae039","firstWeek","$88335940ad51fc8f$export$2e2bcd8739ae039","targetLength","sign","output","abs","$8dea7dd01f0b97c2$export$2e2bcd8739ae039","y","signedYear","M","getUTCMonth","d","a","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","pow","$d91e238bf521c720$var$dayPeriodEnum","$d91e238bf521c720$var$formatTimezoneShort","offset","dirtyDelimiter","absOffset","hours","minutes","delimiter","$d91e238bf521c720$var$formatTimezoneWithOptionalMinutes","$d91e238bf521c720$var$formatTimezone","G","unit","Y","signedWeekYear","weekYear","R","u","Q","q","L","w","week","round","$c4c2445bc457b574$export$2e2bcd8739ae039","I","isoWeek","$e2b4503c694c959a$export$2e2bcd8739ae039","D","dayOfYear","setUTCMonth","startOfYearTimestamp","difference","$dbfee7256f9ba04c$export$2e2bcd8739ae039","E","dayOfWeek","localDayOfWeek","c","isoDayOfWeek","toLowerCase","b","B","K","k","X","_localize","getTimezoneOffset","x","O","z","t","T","$4f085685fa15e740$var$dateLongFormatter","$4f085685fa15e740$var$timeLongFormatter","p","P","dateTimeFormat","datePattern","timePattern","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","$a5375092e28b891e$var$protectedDayOfYearTokens","$a5375092e28b891e$var$protectedWeekYearTokens","indexOf","input","concat","$4e349bc0dbb08c36$var$escapedStringRegExp","$4e349bc0dbb08c36$var$doubleQuoteRegExp","addEventListener","textInput","log","readyState","send","JSON","stringify","alert","emailAddress","email","method","body","ok","newName","scrollTop","onmessage","parse","data","btn"],"version":3,"file":"index-chatik.133b3a58.js.map"}